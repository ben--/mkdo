#!/bin/bash -eu
set -o pipefail

DOCKER_IMAGE=mkdo-build

if [[ $DOCKER_IMAGE != ${DOCKER_CONTAINER-} ]]; then
# FIXME: Try this version on a pre docker-for-mac machine...
#    if ! docker images > /dev/null; then

#    if [[ $(uname -s) = Darwin ]]; then
#        if [[ $(docker-machine status) = Stopped ]]; then
#            docker-machine start
#        fi
#        eval $(docker-machine env)
#    fi

    # FIXME: May behave strangely on symlinks
    source_dir="$(dirname "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)")"

    echo -n "Base Docker: "
    docker build -q \
           --force-rm --rm=true \
           -t "$DOCKER_IMAGE" \
           "$source_dir/do/build-docker"

    "$source_dir/do/create-user" "$DOCKER_IMAGE"

    output_dir="${source_dir}/acceptance-test"
    if [[ -e "$output_dir" ]]; then
        echo rm -rf "$output_dir"
        rm -rf "$output_dir"
    fi
    mkdir "$output_dir"

    docker run -t \
           --env DOCKER_CONTAINER=$DOCKER_IMAGE \
           --env "source_dir=$source_dir" \
           --rm \
           --sig-proxy=true \
           --volume="$source_dir:$source_dir:ro" \
           --volume="$output_dir:$output_dir:rw" \
           --workdir="$source_dir" \
           $DOCKER_IMAGE-user \
           "$source_dir/do/acceptance-test"
#           --volume="$output_dir:$output_dir:rw" \
    exit $?
fi

export source_dir

if [[ -t 1 ]]; then
    if behave ../features; then
        echo -e "\e[92;1m   A_A
 =(o.o)=    ,
 (  _  )--'
  !! !!      SUCCESS!\e[0m"
    else
        echo -e "\e[91;1m   A_A
 =(x.x)=    ,
 (  _  )--'
  !! !!      FAIL.\e[0m"
        exit 1
    fi
else
    behave ../features
fi
